<?
require($_SERVER["DOCUMENT_ROOT"]."/bitrix/header.php");
$APPLICATION->SetTitle("Обновление");
?><h1>Обновление Битрис24</h1>
<p> Обновление корпоративных порталов - это отдельная задача. Сразу отметим, что облачная версия Битрикс24 не требует обновлений, так как все обновления автоматически появляются в облачной версии. <p>
<p>А вот обновление коробочных версий требует аккуратности. Так как в коробочных версиях зачастую функционал программирован под требования клиентов. </p>
<h2>Проблема обновления корпоративного портала</h2>
<p>Почему мы не можем внести изменения в код модулей, компонентов, шаблонов? При таком подходе возникнут проблемы с обновлениями:

<ul><li>мы не можем выполнить обновление, поскольку оно удалит наши доработки;

<li>получаемые обновления не затронут разработанные нами модули, компоненты, шаблоны.</ul></p>

<p>Каковы последствия каждой ситуации? В первом случае нам придется полностью или частично отказаться от полезных обновлений, за которые мы платим. В результате:<ul>

<li>придется уживаться с существующими ошибками в системе,

<li>придется отказаться от возможностей новых версий системы.</ul></p>

<p>Во втором случае мы будем получать обновления, но:<ul>

<li>они применяются к оригинальным составляющим системы, а используются их модифицированные копии,

<li>если обновления не применяются к модифицированным копиям, то придется уживаться с существующими ошибками в них,

<li>мы получим возможности новых версий системы, но модифицированные нами копии составляющих системы будут работать по-старому — новые возможности не будут доступны.</ul><p>

<p>Теоретически, можно было бы выполнять слияние изменений, получаемых с обновлениями и внесенных нами. Однако в данном решении есть подводные камни, например:<ul>
<li>
чем больше изменений (с любой стороны) — тем сложнее слияние, каждое пропущенное обновление — потенциальная проблема;
<li>
если измененная часть системы будет полностью переработана, то слияние будет невозможным.
</ul></p>

<p>В любом случае мы обязаны сохранить возможность обновления.</p>

<h2>Что если начать модифицировать Битрикс24? А настолько ли это плохо?</h2>
<p>Модификация кода Битрикс24 точно позволит достичь результата. Более того, часто прямое редактирование кода даст отличный результат с точки зрения простоты решения. Но — начнутся проблемы вместе с ближайшим обновлением. А обновления нам нужны. Как устранить противоречие? На помощь придет система контроля версий. </p>

<p>На помощь придет система контроля версий. Она «помнит» состояния кода в каждый момент времени, а также позволяет вычислять различия между ними. Этих простых возможностей достаточно для того, чтобы иметь возможность вносить изменения и не терять их при обновлениях.</p>

<p>Единственный способ обновления 1С-Битрикс — его собственная подсистема SiteUpdate.</p>

<p>Чтобы схема работала верно, при каждом обновлении будет необходимо сначала переключаться на оригинальную версию Битрикс24, с которой последний раз производилось слияние, запускать SiteUpdate, и только потом выполнять слияние и запускать модифицированную версию.</p>

<p>Преимущества:<ul><li>

возможность изменять оригинальный код Битрикс24, в том числе API,
<li>
возможность получать обновления всех составляющих частей системы.</ul></p>

<p>Недостатки:
<ul><li>
разрешение конфликтов слияния может быть трудоемким процессом,
<li>
пропущенные обновления увеличивают вероятность возникновения конфликтов,
<li>
усложняется процесс обновления, он должен осуществляться при участии программиста.
</ul>

<p>Несмотря на все проблемы, только такой способ позволит нормально обновлять систему Битрикс24, при этом сохранять весь функционал, специально разработанный для корпоративного портала. </p>

<p>Наши специалисты умеют грамотно обновлять систему без потери разработанного функционала под нужды клиента.</p>
<?require($_SERVER["DOCUMENT_ROOT"]."/bitrix/footer.php");?>